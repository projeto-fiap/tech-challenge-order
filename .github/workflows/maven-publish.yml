name: pipeline

on:
  push:
  pull_request:
    types:
      - closed
      - opened
      - synchronize
      - reopened

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - name: Install Java and Maven
        uses: actions/setup-java@v4
        with:
          java-version: '17'  # Mantido Java 17
          distribution: 'temurin'  # Adopt est치 descontinuado, use Temurin
          cache: maven

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Clean and Compile
        run: mvn clean compile

      - name: Verify Compilation
        run: ls -R target/classes

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - name: Install Java and Maven
        uses: actions/setup-java@v4
        with:
          java-version: '17'  # Mantido Java 17
          distribution: 'temurin'  # Adopt est치 descontinuado, use Temurin
          cache: maven

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Unit Tests
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn '-Dtest=!tech.integration.fiap.**' test org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -DsonarToken=$SONAR_TOKEN

      - name: Verify Test Reports
        run: cat target/surefire-reports/*.txt

  integrated-tests:
    name: Integrated Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - name: Install Java and Maven
        uses: actions/setup-java@v4
        with:
          java-version: '17'  # Mantido Java 17
          distribution: 'temurin'  # Adopt est치 descontinuado, use Temurin
          cache: maven

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Integrated Tests
        run: mvn '-Dtest=tech.integration.fiap.**' test

      - name: Verify Integration Test Reports
        run: cat target/surefire-reports/*.txt

  analysis-sonarqube:
    name: Quality Gate
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Java and Maven
        uses: actions/setup-java@v4
        with:
          java-version: '17'  # Mantido Java 17
          distribution: 'temurin'  # Adopt est치 descontinuado, use Temurin
          cache: maven
      - name: Sonar Build Breaker
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}
        uses: jkumar19/sonar-build-breaker@v1.0.0
        with:
          sonar_url: "https://sonarcloud.io"
          sonar_branch: ${{ env.GITHUB_REF_NAME }}
          sonar_token: ${{ secrets.SONAR_TOKEN }}
          project_key: "projeto-fiap_tech-challenge-order"
      - name: Verify Sonar Analysis
        run: echo "Sonar analysis completed."

  send-docker-hub:
    name: Deploy PRD
    runs-on: ubuntu-latest
    needs:
      - analysis-sonarqube
      - integrated-tests
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Build Docker Image
        run: docker build . -t matheuspatricio0/projeto-fiap-order:${{ github.sha }}
      - name: Verify Docker Build
        run: docker images
      - name: Push Docker Image
        run: docker push matheuspatricio0/projeto-fiap-order:${{ github.sha }}

  deploy-dev:
    runs-on: ubuntu-latest
    environment:
      name: dev
    needs:
      - analysis-sonarqube
      - integrated-tests
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Deploy to DEV
        run: |
          echo "Deploying to DEV environment..."
          # Adicione comandos reais de deploy aqui

  deploy-hml:
    runs-on: ubuntu-latest
    environment:
      name: hml
    needs:
      - analysis-sonarqube
      - integrated-tests
    if: github.ref == 'refs/heads/release'
    steps:
      - name: Deploy to HML
        run: |
          echo "Deploying to HML environment..."
          # Adicione comandos reais de deploy aqui